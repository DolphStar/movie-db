@use "../../abstract/variables" as *;
@use "../../abstract/mixins" as *;
@use "../../abstract/animations" as *;

// Remove default styling from the wrapper
.wrapper {
    @include remove-default-styling;
}

// Disable y and x srolling on trailr
.overflow-hidden {
    overflow: hidden;
}

// Main Menu Styling
.game-modes {
    border: green 1px solid;
    padding: 50px;
    ul {
        list-style: none;
        
        li {
            justify-content: center;
            align-self: center;
            
        }
    }
}

// Game Room
.gameroom-wrapper {
    @include remove-default-styling;
    background-color: black;
    border: 1px solid white;
    min-height: calc(100vh - 2px);
    display: flex;
    flex-direction: column;
    position: relative;

    // Removing default styling from everything
    * {
        @include remove-default-styling;
    }

    section {
        display: flex;
        justify-content: center;
        align-items: center;
        text-align: center;
    }

    h3 {
        color: white;
        margin-bottom: 10px;
    }

    input {
        border: 1px white solid;
    }

    button {
        border-radius: 0;
        border: 1px solid white;
        transition: background-color 0.3s ease-in-out;
        transition: color 0.3s ease-in-out;
    }

    button:hover {
        color: black;
        background-color: white;
    }

    // FRAMES //

    @include frames($small);

    @media screen and (min-width: 700px){
        @include frames($medium);
    }

    @media screen and (min-width: 1100px) {
        @include frames($large);
    }

    @media screen and (min-width: 1400px){
        @include frames($xtra);
    }

    .frameA {
        border: 1px solid blue;
    }

    .frameB {
        border: 1px solid red;
    }

    // Frame switching animations
    .alive {
        animation-name: revive;
        animation-duration: 2s;
        animation-timing-function: ease;
        animation-fill-mode: forwards;
    }

    .dead {
        animation-name: kill;
        animation-duration: 1.5s;
        animation-timing-function: ease;
        animation-fill-mode: forwards;
    }

    // Start button animation
    .start-animation {
        animation: startAnimation 2s infinite;
    }

    .waiting-animation {
        animation: waitingAnimation 2s infinite;
    }

    // INPUT //

    // Width
    @include input-wrapper($small);

    @media screen and (min-width: 700px){
        @include input-wrapper($medium);
    }

    @media screen and (min-width: 1100px){
        @include input-wrapper($large);
    }
    
    @media screen and (min-width: 1400px){
        @include input-wrapper($xtra)
    }

    //Input width, Btn width, btn font size
    @include input(230px, 55px, 0.8rem);
    
    @media screen and (min-width: 700px){
        @include input(275px, 75px, 1rem);
    }

    @media screen and (min-width: 1100px){
        @include input(290px, 80px, 1rem);
    }
    
    @media screen and (min-width: 1400px){
        @include input(365px, 80px, 1rem);
    }
    
    // PLAYER BOXES (PLAYERNAME, SIDE, POSITION, MAX HP WIDTH)
    @include statbox('playerA', left, calc((100vw - $small) * 0.5), 125px);
    @include statbox('playerB', right, calc((100vw - $small) * 0.5), 125px);
    @include guess-history-combined($small, 67px);

    @media screen and (min-width: 700px){
        @include statbox('playerA', left, calc((100vw - $medium) * 0.5), 150px);
        @include statbox('playerB', right, calc((100vw - $medium) * 0.5), 150px);
        @include guess-history-combined($medium, 67px);
    }

    @media screen and (min-width: 1100px){
        @include playerbox-split('playerA', left, 1%, $large);
        @include playerbox-split('playerB', right, 1%, $large);
    }

    @media screen and (min-widht: 1400px){
        @include playerbox-split('playerA', left, 1%, $xtra);
        @include playerbox-split('playerB', right, 1%, $xtra);
    }
}